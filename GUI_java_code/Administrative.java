

import static java.lang.Math.abs;
import java.util.*;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.util.Date;
public class Administrative extends javax.swing.JFrame {
    
    private Connection conn = null;
    private PreparedStatement pst = null;
    private ResultSet rs = null;
    private String email;
    private String comp;
    public Administrative() {
        setResizable(false);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jComboBox1 = new javax.swing.JComboBox<>();
        jOptionPane1 = new javax.swing.JOptionPane();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFyllo = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSalary = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        comboFyllo = new javax.swing.JComboBox<>();
        btnSubmit = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lblTotalCost = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnSettings = new javax.swing.JButton();
        lblAdministrativeCost = new javax.swing.JLabel();
        lblJournalistCost = new javax.swing.JLabel();
        lblHello = new javax.swing.JLabel();
        btnSignOut = new javax.swing.JButton();
        Calculate = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        spinnerNO = new javax.swing.JSpinner();
        endDate = new com.toedter.calendar.JDateChooser();
        startDate = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        radioSetCurrent = new javax.swing.JRadioButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administrator");

        tblFyllo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PaperNO", "Copies", "Not sold"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFyllo);

        tblSalary.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Surname", "Email", "Job", "Current Salary"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblSalary);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("NO:");

        comboFyllo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFylloActionPerformed(evt);
            }
        });

        btnSubmit.setBackground(new java.awt.Color(51, 153, 255));
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Administratives' cost:");

        lblTotalCost.setForeground(new java.awt.Color(255, 0, 51));
        lblTotalCost.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("INSERT NON SOLD COPIES");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Total salary cost:");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("PaperNO:");

        jLabel7.setBackground(new java.awt.Color(255, 51, 51));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 51));
        jLabel7.setText("COST OF SALARIES");

        btnSettings.setBackground(new java.awt.Color(51, 153, 255));
        btnSettings.setText("SETTINGS");
        btnSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettingsActionPerformed(evt);
            }
        });

        lblAdministrativeCost.setForeground(new java.awt.Color(255, 0, 51));
        lblAdministrativeCost.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        lblJournalistCost.setForeground(new java.awt.Color(255, 0, 51));
        lblJournalistCost.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        lblHello.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblHello.setForeground(new java.awt.Color(255, 0, 51));
        lblHello.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblHello.setText("WELCOME");

        btnSignOut.setBackground(new java.awt.Color(51, 153, 255));
        btnSignOut.setText("SIGN OUT");
        btnSignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignOutActionPerformed(evt);
            }
        });

        Calculate.setBackground(new java.awt.Color(51, 153, 255));
        Calculate.setText("Calculate");
        Calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculateActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Journalists' cost:");

        spinnerNO.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        endDate.setBackground(new java.awt.Color(51, 153, 255));
        endDate.setDateFormatString("y-MM-d");

        startDate.setBackground(new java.awt.Color(51, 153, 255));
        startDate.setDateFormatString("y-MM-d");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Start date:");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("End date:");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("Salary is calculated as follows:\n\nsalary = BasicSalary + 0.005*BasicSalary*months\nmonths=months of working experience + months in job.");
        jScrollPane3.setViewportView(jTextArea1);

        radioSetCurrent.setBackground(new java.awt.Color(0, 0, 0));
        radioSetCurrent.setForeground(new java.awt.Color(255, 255, 255));
        radioSetCurrent.setText("Set current Date");
        radioSetCurrent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSetCurrentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioSetCurrent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(startDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(endDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(26, 26, 26)
                                .addComponent(Calculate))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblHello, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnSignOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(spinnerNO, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboFyllo, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(75, 75, 75)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAdministrativeCost, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTotalCost, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblJournalistCost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblHello, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSignOut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSettings)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Calculate)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radioSetCurrent)))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(comboFyllo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblAdministrativeCost, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(lblJournalistCost, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinnerNO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addComponent(btnSubmit))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        String sql = "UPDATE fyllo SET fyl_epistramena_antit = ? WHERE fyl_efhmerida=? AND fyl_arithmos=?";
        try{
            if(comboFyllo.getSelectedItem() != null){
                pst=conn.prepareStatement(sql);
                pst.setString(1, spinnerNO.getValue().toString());
                pst.setString(2, comp);
                pst.setString(3, comboFyllo.getSelectedItem().toString());
                pst.executeUpdate();
                setAndRefresh();
                JOptionPane.showMessageDialog(null, "Successful submittion!");
            }
            else{
                JOptionPane.showMessageDialog(null, "No available paper!");
            }
        }catch(Exception ex){JOptionPane.showMessageDialog(null, ex);}
        
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettingsActionPerformed
        Settings s = new Settings();
        s.setInfo(email, comp);
        s.setVisible(true);
    }//GEN-LAST:event_btnSettingsActionPerformed

    private void btnSignOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignOutActionPerformed
        setVisible(false);
        Login_GUI l = new Login_GUI();
        l.setVisible(true);
    }//GEN-LAST:event_btnSignOutActionPerformed

    private void CalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculateActionPerformed
        if(startDate.getDate() == null || endDate.getDate() == null){
            JOptionPane.showMessageDialog(null, "End date or Start date cannot be empty!");
        }
        else if(endDate.getDate().compareTo(new Date()) >= 0){
            JOptionPane.showMessageDialog(null, "End date cannot be later than current date!");
        }
        else if(startDate.getDate().compareTo(endDate.getDate()) >= 0){
            JOptionPane.showMessageDialog(null, "Start date cannot be later than end date!");
        }
        else{
            float total_admins=0;
            float total_journalists=0;
            Date temp_start;
            String sql ="SELECT * FROM dimosiografos WHERE dim_efhmerida=?";
            String sql1 ="SELECT * FROM dioikitikos WHERE dik_efhmerida=?";
            try{
                //JOURNALISTS
                pst = conn.prepareStatement(sql);
                pst.setString(1, comp);
                rs = pst.executeQuery();
                int dif_current_start;
                int dif_end_start;
                long diff =0L;
                Date current_date = new Date();
                while(rs.next()){
                    //IF HM PROLHSPHS >= START DATE THEN START DATE -----> HM PROSLHPSH
                    if(rs.getDate("dim_proslhpsh").compareTo(startDate.getDate()) >= 0){
                        temp_start = rs.getDate("dim_proslhpsh");
                    }
                    else{
                        temp_start = startDate.getDate();
                    }
                    
                    //FIND DIFFERENCES
                    diff = temp_start.getTime() - current_date.getTime();
                    dif_current_start = abs((int)((int)(diff / (24*60*60*1000)))/30);
                    
                    diff = temp_start.getTime() - endDate.getDate().getTime();
                    dif_end_start = abs((int)((int)(diff / (24*60*60*1000)))/30);
                    total_journalists += calculatePastSalary(rs.getInt("dim_misthos"), dif_end_start, dif_current_start);
                    
                }
                 // ADMINISTRATORS
                pst = conn.prepareStatement(sql1);
                pst.setString(1, comp);
                rs = pst.executeQuery();
                while(rs.next()){
                    //IF HM PROLHSPHS >= START DATE THEN START DATE -----> HM PROSLHPSH
                    if(rs.getDate("dik_proslhpsh").compareTo(startDate.getDate()) >= 0){
                        temp_start = rs.getDate("dik_proslhpsh");
                    }
                    else{
                        temp_start = startDate.getDate();
                    }
                    
                    //FIND DIFFERENCES
                    diff = temp_start.getTime() - current_date.getTime();
                    dif_current_start = abs((int)((int)(diff / (24*60*60*1000)))/30);
                    
                    diff = temp_start.getTime() - endDate.getDate().getTime();
                    dif_end_start = abs((int)((int)(diff / (24*60*60*1000)))/30);
                    total_admins += calculatePastSalary(rs.getInt("dik_misthos"), dif_end_start, dif_current_start);
                    
                    
                }
                radioSetCurrent.setSelected(false);
                startDate.setDate(null);
                endDate.setDate(null);
                lblJournalistCost.setText(String.valueOf(total_journalists)+" \u20ac");
                lblAdministrativeCost.setText(String.valueOf(total_admins)+" \u20ac");
                lblTotalCost.setText(String.valueOf(total_journalists + total_admins)+" \u20ac");
            }
            catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        }
    }//GEN-LAST:event_CalculateActionPerformed

    private void radioSetCurrentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSetCurrentActionPerformed
        if(radioSetCurrent.isSelected()){
            endDate.setDate(new Date());
        }
        else{
            endDate.setDate(null);
        }
    }//GEN-LAST:event_radioSetCurrentActionPerformed

    private void comboFylloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFylloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboFylloActionPerformed

    public void setInfo(String email, String company, Connection con){
        this.email = email;
        this.comp = company;
        this.conn = con;
    }
    
    private void showFylla() throws ParseException{
        String sql = "SELECT * FROM fyllo WHERE fyl_efhmerida=?";
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String temp = sdf.format(new Date());
        Date current_date = sdf.parse(temp);
        String temp1;
        Date date2;
        DefaultTableModel model = (DefaultTableModel)tblFyllo.getModel();
        Object[] row = new Object[3];
        model.setRowCount(0);
        try{
            pst = conn.prepareStatement(sql);
            pst.setString(1, comp);
            rs = pst.executeQuery();
            while(rs.next()){
                temp1 = rs.getString("fyl_kikloforia");
                date2 = sdf.parse(temp1);
                if(current_date.compareTo(date2) > 0){
                    row[0] = rs.getInt("fyl_arithmos");
                    row[1] = rs.getInt("fyl_antitypa");
                    row[2] = rs.getInt("fyl_epistramena_antit");
                    if( rs.getInt("fyl_epistramena_antit") == -1){
                        row[2] = "-";
                    }
                    model.addRow(row);
                    comboFyllo.addItem(rs.getString("fyl_arithmos")); //set COMBO FYLLO
                    setSpinner(); //SET spinner
                    
                }
            }
        }
        catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        
    }
    
    private void showPeople(){
        String sql = "SELECT * FROM dimosiografos WHERE dim_efhmerida=?";
        String sql1 = "SELECT * FROM dioikitikos WHERE dik_efhmerida=?";
        DefaultTableModel model = (DefaultTableModel)tblSalary.getModel();
        Object[] row = new Object[5];
        model.setRowCount(0);
        try{
            pst = conn.prepareStatement(sql);//journalists----------
            pst.setString(1, comp);
            rs = pst.executeQuery();
            while(rs.next()){
                row[0] = rs.getString("dim_onoma");
                row[1] = rs.getString("dim_epitheto");
                row[2] = rs.getString("dim_email");
                if(rs.getString("dim_idiothta").equals("Arxisintakths")){
                    row[3] = "Chief";
                }
                else{
                    row[3] = "Journalist";
                }
                row[4] = rs.getFloat("dim_misthos");
                model.addRow(row);
            }
            pst = conn.prepareStatement(sql1);//administrators----------
            pst.setString(1, comp);
            rs = pst.executeQuery();
            while(rs.next()){
                row[0] = rs.getString("dik_onoma");
                row[1] = rs.getString("dik_epitheto");
                row[2] = rs.getString("dik_email");
                row[3] = "Administrator";
                row[4] = rs.getFloat("dik_misthos");
                model.addRow(row);
            }
        }
        catch(Exception e){JOptionPane.showMessageDialog(null, e);}
    }
    
    private void setSpinner(){
        String sql = "SELECT * FROM fyllo WHERE fyl_efhmerida=? and fyl_arithmos=?";
        if(comboFyllo.getSelectedItem() != null){
            try{
                pst = conn.prepareStatement(sql);
                pst.setString(1, comp);
                pst.setString(2, comboFyllo.getSelectedItem().toString());
                rs = pst.executeQuery();
                if(rs.next()){
                    SpinnerModel model = new SpinnerNumberModel(0, 0, rs.getInt("fyl_antitypa"), 1);
                    spinnerNO.setModel(model);
                }
                
            }
            catch(Exception ex){JOptionPane.showConfirmDialog(null, ex);}
            
            
        }
        else{
            JOptionPane.showMessageDialog(null, "No available Paper!");
        }
    }
    public static void main(String args[]){
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Administrative.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Administrative.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Administrative.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Administrative.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Administrative().setVisible(true);
            }
        });
    }
    
    public void initialize(String username) throws ParseException{
        lblHello.setText("Welcome "+username);
        setAndRefresh();
    }
    
    private void setAndRefresh() throws ParseException{
        comboFyllo.removeAllItems();
        spinnerNO.setValue(0);
        showFylla(); //set TABLE FYLLO and COMBO FYLLO
        showPeople();//set TABLE SALARY
        
        
        
     }
    // TAKES DIFFERENCE FROM END DATE AND START DATE AND RETURS THE TOTAL COST FOR ONE EMPLOYEE
    private float calculatePastSalary(float current_salary, int months, int difference){
        //diff=current_date-start_date=mon_diff
        ////months = end_date-start_date=mon_diff
        float total=0;
        float past_salary=0;
        for(int i=0; i<difference; i++)  //CALCULATE SALARY AT START MONTH!!
        {
            past_salary = (float)(current_salary - 650*(0.005));
            current_salary= past_salary;
        }
        for(int j=0; j < months;  j++)  //CALCULATE TOTAL SALARY FROM START MONTH TO END MONTH 
        {
            
            total += (float)(past_salary + 650*(0.005));
            past_salary=(float)(past_salary + 650*(0.005));
            
        }
        return total;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Calculate;
    private javax.swing.JButton btnSettings;
    private javax.swing.JButton btnSignOut;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> comboFyllo;
    private com.toedter.calendar.JDateChooser endDate;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblAdministrativeCost;
    private javax.swing.JLabel lblHello;
    private javax.swing.JLabel lblJournalistCost;
    private javax.swing.JLabel lblTotalCost;
    private javax.swing.JRadioButton radioSetCurrent;
    private javax.swing.JSpinner spinnerNO;
    private com.toedter.calendar.JDateChooser startDate;
    private javax.swing.JTable tblFyllo;
    private javax.swing.JTable tblSalary;
    // End of variables declaration//GEN-END:variables
}
